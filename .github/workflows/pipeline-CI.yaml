name: CI/CD - Energia

on:
  pull_request:
    branches: [ "master" ]
  push:
    branches: [ "master" ]

env:
  APP_DIR: energia/energia
  DOCKERFILE: energia/Dockerfile
  DOCKER_BUILD_CONTEXT: .
  JAVA_VERSION: '24'
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/energia

jobs:
  build-and-test:
    name: Build & Test (Maven)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Debug layout
        run: |
          pwd
          ls -la
          echo "---- energia ----"; ls -la energia || true
          echo "---- energia/energia ----"; ls -la energia/energia || true
          echo "---- Dockerfile exists? ----"; test -f "${{ env.DOCKERFILE }}" && echo "OK" || (echo "NOT FOUND" && exit 1)

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'
          cache: 'maven'

      - name: Run unit tests
        working-directory: ${{ env.APP_DIR }}
        run: mvn -B -ntp test

      - name: Upload test reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: ${{ env.APP_DIR }}/target/surefire-reports/*
          if-no-files-found: ignore

  dockerize-and-push:
    name: Build & Push Docker
    needs: build-and-test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=raw,value=master-staging
            type=sha,prefix=sha-,format=long
            type=raw,value=latest

      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.DOCKER_BUILD_CONTEXT }}
          file: ${{ env.DOCKERFILE }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-staging:
    name: Deploy Staging (Azure)
    needs: dockerize-and-push
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy container (staging)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME_STAGING }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_STAGING }}
          images: ${{ env.DOCKER_IMAGE }}:master-staging

  deploy-production:
    name: Deploy Production (Azure)
    needs: deploy-staging
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy container (prod)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME_PRODUCTION }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_PRODUCTION }}
          images: ${{ env.DOCKER_IMAGE }}:sha-${{ github.sha }}